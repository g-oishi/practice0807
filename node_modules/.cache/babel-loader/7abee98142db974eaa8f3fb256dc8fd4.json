{"remainingRequest":"/Users/abs/Documents/ohishi/Vuejs_practice/practice05/node_modules/thread-loader/dist/cjs.js!/Users/abs/Documents/ohishi/Vuejs_practice/practice05/node_modules/babel-loader/lib/index.js!/Users/abs/Documents/ohishi/Vuejs_practice/practice05/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/abs/Documents/ohishi/Vuejs_practice/practice05/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/abs/Documents/ohishi/Vuejs_practice/practice05/src/views/Release.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/abs/Documents/ohishi/Vuejs_practice/practice05/src/views/Release.vue","mtime":1596091666655},{"path":"/Users/abs/Documents/ohishi/Vuejs_practice/practice05/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/abs/Documents/ohishi/Vuejs_practice/practice05/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/abs/Documents/ohishi/Vuejs_practice/practice05/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/abs/Documents/ohishi/Vuejs_practice/practice05/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/abs/Documents/ohishi/Vuejs_practice/practice05/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBuYXZMaXN0c1JlbGVhc2U6IFt7CiAgICAgICAgbmFtZTogJ+WJjeaPkOadoeS7ticsCiAgICAgICAgbGluazogJy9yZWxlYXNlJywKICAgICAgICBoYXNoOiAnI2NvbnRlbnQwMScKICAgICAgfSwgewogICAgICAgIG5hbWU6ICdWdWXjg5fjg63jgrjjgqfjgq/jg4jjga7jg5Pjg6vjg4knLAogICAgICAgIGxpbms6ICcvcmVsZWFzZScsCiAgICAgICAgaGFzaDogJyNjb250ZW50MDInCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAnTmdpbnjjga7oqK3lrprnorroqo0nLAogICAgICAgIGxpbms6ICcvcmVsZWFzZScsCiAgICAgICAgaGFzaDogJyNjb250ZW50MDMnCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAnU0ZUUOOCveODleODiCcsCiAgICAgICAgbGluazogJy9yZWxlYXNlJywKICAgICAgICBoYXNoOiAnI2NvbnRlbnQwNCcKICAgICAgfSwgewogICAgICAgIG5hbWU6ICfjg5XjgqHjgqTjg6vou6LpgIHikaAnLAogICAgICAgIGxpbms6ICcvcmVsZWFzZScsCiAgICAgICAgaGFzaDogJyNjb250ZW50MDUnCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAn44OV44Kh44Kk44Or6Lui6YCB4pGhJywKICAgICAgICBsaW5rOiAnL3JlbGVhc2UnLAogICAgICAgIGhhc2g6ICcjY29udGVudDA2JwogICAgICB9LCB7CiAgICAgICAgbmFtZTogJ+WLleS9nOeiuuiqjScsCiAgICAgICAgbGluazogJy9yZWxlYXNlJywKICAgICAgICBoYXNoOiAnI2NvbnRlbnQwNycKICAgICAgfV0KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBzZXRSZWxlYXNlTGlzdHM6IGZ1bmN0aW9uIHNldFJlbGVhc2VMaXN0cygpIHsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdzZXREcmF3ZXInLCB0cnVlKTsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdzZXROYXZMaXN0cycsIHRoaXMubmF2TGlzdHNSZWxlYXNlKTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLnNldFJlbGVhc2VMaXN0cygpOwogIH0KfTs="},{"version":3,"sources":["Release.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmMA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,eAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA,MADA;AAEA,QAAA,IAAA,EAAA,UAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OADA,EAMA;AACA,QAAA,IAAA,EAAA,eADA;AAEA,QAAA,IAAA,EAAA,UAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OANA,EAWA;AACA,QAAA,IAAA,EAAA,YADA;AAEA,QAAA,IAAA,EAAA,UAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OAXA,EAgBA;AACA,QAAA,IAAA,EAAA,SADA;AAEA,QAAA,IAAA,EAAA,UAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OAhBA,EAqBA;AACA,QAAA,IAAA,EAAA,SADA;AAEA,QAAA,IAAA,EAAA,UAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OArBA,EA0BA;AACA,QAAA,IAAA,EAAA,SADA;AAEA,QAAA,IAAA,EAAA,UAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OA1BA,EA+BA;AACA,QAAA,IAAA,EAAA,MADA;AAEA,QAAA,IAAA,EAAA,UAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OA/BA;AADA,KAAA;AAuCA,GAzCA;AA0CA,EAAA,OAAA,EAAA;AACA,IAAA,eADA,6BACA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,WAAA,EAAA,IAAA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,aAAA,EAAA,KAAA,eAAA;AACA;AAJA,GA1CA;AAgDA,EAAA,OAAA,EAAA,mBAAA;AACA,SAAA,eAAA;AACA;AAlDA,CAAA","sourcesContent":["<template>\n  <div class=\"release\">\n    <h1 class=\"rel_h01\">概要</h1>\n    <p>\n      Vue CLIを用いて作成したWebサイトを公開するまでの手順を説明します。<br>\n      ここでの公開とは、同一ネットワーク上での公開（言わば内部公開）を意味します。\n    </p>\n    <div style=\"height:40px\"></div>\n\n    <h2 class=\"rel_h02\" id=\"content01\">{{ navListsRelease[0].name }}</h2>\n    <ol>\n      <li>公開したいWebサイトが <b>Vue CLI</b> で作成されている（プロジェクト作成済みである）</li>\n      <li>Webサイトを作成したPCがRaspberry Piと同じネットワーク上に存在し、且つSSH接続可能</li>\n      <li>Raspberry PiにNginxがインストール済み</li>\n    </ol>\n    <p>\n      <br>\n      ※ 2と3については、本サイトの\"Raspberry Pi\"と\"Nginx\"で紹介している内容が完了していればOKです。\n    </p>\n    <div style=\"height:60px\"></div>\n\n    <h2 class=\"rel_h02\" id=\"content02\">{{ navListsRelease[1].name }}</h2>\n    <p>\n      Vue CLIで作成したプロジェクトのビルドを実行します。\n    </p>\n    <p>\n      Webサイトを作成したPCにてターミナルを起動し、Vue CLIで作成したプロジェクトフォルダに移動してください。<br>\n      その後、以下のコマンドを入力してビルドを実行してください。\n    </p>\n    <div class=\"rel_box01\">\n      <h3 class=\"ttl\">ターミナル</h3>\n      <p>\n        $ npm run build\n      </p>\n    </div>\n    <p>プロジェクトフォルダ内に<b><font color=\"red\">\"dist\"</font></b>という名称のフォルダが作成されていれば成功です。</p>\n    <div style=\"height:60px\"></div>\n\n    <h2 class=\"rel_h02\" id=\"content03\">{{ navListsRelease[2].name }}</h2>\n    <p>\n      ビルド実行により作成されたdistフォルダの中身をRaspberry Piに送信する必要がありますが、前段階としてRaspberry Piのどの階層に送信したら良いのかを確認します。\n    </p>\n    <p>\n      まずはPCにてターミナルを起動し、Raspberry Piに対してSSH接続を行ってください（user:piでログイン）。<br>\n      接続後、以下のコマンドを実行して設定内容が記述されたファイルを確認してください。\n    </p>\n    <div class=\"rel_box01\">\n      <h3 class=\"ttl\">ターミナル</h3>\n      <p>\n        $ cat /etc/nginx/conf.d/default.conf\n      </p>\n    </div>\n    <p>\n      <br>\n      実行すると、ファイルの上部に以下のような内容が記述されていることが確認できます。\n    </p>\n    <div class=\"rel_box01\">\n      <h3 class=\"ttl\">/etc/nginx/conf.d/default.conf（上部）</h3>\n      <pre>\nserver {\n    listen       80;\n    server_name  localhost;\n\n    #charset koi8-r;\n    #access_log  /var/log/nginx/host.access.log  main;\n    location / {\n        root   /usr/share/nginx/html;\n        index  index.html index.htm;\n    }</pre>\n    </div>\n    <p>\n      <br>\n      location内のrootに記述されている階層が、distフォルダの中身の送信先となります。<br>\n      上記の例だと<b><font color=\"red\">\"/usr/share/nginx/html\"</font></b>となっている為、以後の説明ではこれを用います。\n    </p>\n    <p>\n      次に、確認した階層の中身を確認するために以下のコマンドを順番に実行してください。\n    </p>\n    <div class=\"rel_box01\">\n      <h3 class=\"ttl\">ターミナル</h3>\n      <p>\n        $ cd /usr/share/nginx/html<br>\n        $ ls\n      </p>\n    </div>\n    <p>\n      Nginxのインストール後から何もしていなければ、<b>\"index.html\"</b>と<b>\"50x.html\"</b>というファイルが入っていることが確認できます。\n    </p>\n    <p>\n      この後の作業でdistフォルダ内にあるindex.htmlファイルをここに置くことになるため、元々存在するindex.htmlファイルを先に削除しておいても構いません。<br>\n      削除する場合は以下のコマンドを実行してください。\n    </p>\n    <div class=\"rel_box01\">\n      <h3 class=\"ttl\">ターミナル</h3>\n      <p>\n        $ sudo rm index.html\n      </p>\n    </div>\n    <p>\n      ちなみにですが、ここで削除しているのはNginxインストール後の動作確認時にブラウザで開いたページ（\"Welcome to nginx!\"と書いてあるページ）を表示するhtmlファイルです。\n    </p>\n    <div style=\"height:60px\"></div>\n\n    <h2 class=\"rel_h02\" id=\"content04\">{{ navListsRelease[3].name }}</h2>\n    <p>\n      distフォルダの中身をRaspberry Piに送信するためのSFTPソフトをダウンロードします。<br>\n      各自好みのソフトを使ってもらって構いませんが、私の場合はFileZillaを使用したのでこちらにご紹介しておきます。\n    </p>\n    <p>\n      以下のダウンロードサイトを開き、\"FileZilla_Client\"の中から各自のPC環境に適したものをダウンロード・インストールしてください。\n    </p>\n    <a href=\"https://ja.osdn.net/projects/filezilla/releases/\" target=\"_blank\">FileZilla ダウンロード</a>\n    <div style=\"height:60px\"></div>\n\n    <h2 class=\"rel_h02\" id=\"content05\">{{ navListsRelease[4].name }}</h2>\n    <p>\n      distフォルダの中身をRaspberry Piに送信します。<br>\n      FileZillaを使用した例を紹介しますが、もし他のソフトを使用する場合は各自でやり方を調べていただくようお願いします。\n    </p>\n    <p>\n      まずはFileZillaを起動して、サイトマネージャーを開いてください。<br>\n      サイトマネージャーは、画面の一番左上のアイコン（サーバーのようなもの？が複数表示されている）を押すと開きます。\n    </p>\n    <p>\n      サイトマネージャー画面が開いたら、左下にある \"新しいサイト\" ボタンを押してください。<br>\n      その後、画面右側の各入力欄に以下の内容を入力してください。\n    </p>\n    <li>プロトコル：SFTP - SSH File Transfer Protocol</li>\n    <li>ホスト：raspberry piのIPアドレス</li>\n    <li>ログオン タイプ：通常</li>\n    <li>ユーザー：pi</li>\n    <li>パスワード：raspberry（パスワードを変更したならそのパスワードを入力）</li>\n    <p>\n      <br>\n      ここまでの入力が完了したら、 \"接続\" ボタンを押して接続してください。\n    </p>\n    <p>\n      最初の画面に戻って接続成功していれば、続けてファイル転送を実行します。<br>\n      画面左側のローカルサイトでは、PCのdistフォルダを開きます。<br>\n      画面右側のリモートサイトでは、転送先の階層を開きます（今回の例だと \"/usr/share/nginx/html\"）。\n    </p>\n    <p>\n      画面左側のdistフォルダの<b><font color=\"red\">中身全て</font></b>を、画面右側にドラッグ＆ドロップして送信してください。<br>\n      送信成功していれば、公開の準備は以上です。\n    </p>\n    <p>\n      送信の際、<b><font color=\"red\">permissionの関係でエラーとなり送信できない</font></b>場合があります。<br>\n      その場合、次の項目「ファイル転送②」に移ってください。\n    </p>\n    <div style=\"height:60px\"></div>\n\n    <h2 class=\"rel_h02\" id=\"content06\">{{ navListsRelease[5].name }}</h2>\n    <p>\n      ファイル転送①にて、permissionが原因で送信できなかった場合（というか私がそうでした）の対処を紹介します。<br>\n      前提として、ファイル転送①でRaspberry Piへの接続までは出来たとします。\n    </p>\n    <p>\n      接続設定後のFileZillaの画面（起動後の最初の画面）で、右側のリモートサイトの指定先を変更します。<br>\n      指定先を <b><font color=\"red\">\"/home/pi\"</font></b> に変更してください（user:piのホームディレクトリにあたる）。<br>\n      変更した後、ファイル転送①で説明したのと同様にdistフォルダの中身をドラッグ＆ドロップしてください。\n    </p>\n    <p>\n      送信できたら、SSH接続中（user:piでログイン中）のPCのターミナルにて、送信したファイルやディレクトリの移動を行います。<br>\n      ホームディレクトリに移動して、先ほど送信したものを \"/usr/share/nginx/html\" へ移しましょう。<br>\n      以下のコマンドを順番に実行してください。\n    </p>\n    <div class=\"rel_box01\">\n      <h3 class=\"ttl\">ターミナル</h3>\n      <p>\n        $ cd<br>\n        $ sudo mv index.html css js /usr/share/nginx/html\n      </p>\n    </div>\n    <p>\n      この例では \"index.html\"ファイル、\"css\"ディレクトリ、\"js\"ディレクトリの3種を \"/usr/share/nginx/html\"に移動させています。<br>\n      送信対象の部分は、distファイルから送信したものに応じて各自変更して実行してください。\n    </p>\n    <p>\n      対処方法は以上となりますが、この方法でも失敗してしまう場合はお手数ですが各自で調べていただくようお願いします。\n    </p>\n    <div style=\"height:60px\"></div>\n\n    <h2 class=\"rel_h02\" id=\"content07\">{{ navListsRelease[6].name }}</h2>\n    <p>\n      最後に動作確認を行います。\n    </p>\n    <p>\n      Raspberry Piと同じネットワーク上に存在するPCでブラウザを起動してください。<br>\n      Raspberry PiのIPアドレス指定（http://192.168.xxx.xxx）でアクセスして、作成したWebサイトが表示されていればOKです。\n    </p>\n    <div style=\"height:30px\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      navListsRelease: [\n        {\n          name: '前提条件',\n          link: '/release',\n          hash: '#content01'\n        },\n        {\n          name: 'Vueプロジェクトのビルド',\n          link: '/release',\n          hash: '#content02'\n        },\n        {\n          name: 'Nginxの設定確認',\n          link: '/release',\n          hash: '#content03'\n        },\n        {\n          name: 'SFTPソフト',\n          link: '/release',\n          hash: '#content04'\n        },\n        {\n          name: 'ファイル転送①',\n          link: '/release',\n          hash: '#content05'\n        },\n        {\n          name: 'ファイル転送②',\n          link: '/release',\n          hash: '#content06'\n        },\n        {\n          name: '動作確認',\n          link: '/release',\n          hash: '#content07'\n        }\n      ]\n    }\n  },\n  methods: {\n    setReleaseLists () {\n      this.$store.commit('setDrawer', true)\n      this.$store.commit('setNavLists', this.navListsRelease)\n    }\n  },\n  created: function () {\n    this.setReleaseLists()\n  }\n}\n</script>\n\n<style scoped>\n  .release {\n    font-size: 16px;\n    padding: 15px 15px 0 15px;\n  }\n  .rel_h01 {\n    background: linear-gradient(#F3F5F5, #fff);\n    background: -o-linear-gradient(#F3F5F5, #fff);\n    background: -ms-linear-gradient(#F3F5F5, #fff);\n    background: -moz-linear-gradient(#F3F5F5, #fff);\n    background: -webkit-linear-gradient(#F3F5F5, #fff);\n    background: -webkit-gradient(linear, left top, left bottom, color-stop(1.00, #fff), color-stop(0.00, #F3F5F5));\n    border-bottom: 2px solid #1B73BA;\n    box-sizing: border-box;\n    font-size: 22px;\n    margin: 0 0 15px;\n    padding: 7px 0 5px 5px;\n  }\n  .rel_h02 {\n    border-bottom:1px solid #999999;\n    color: #333;\n    font-size: 20px;\n    margin: 0 0 20px;\n    padding: 0 0 8px;\n  }\n  .rel_box01 {\n    background-color: #1B73BA;\n    width: auto;\n  }\n  .rel_box01 p {\n    background-color: #333333;\n    color: white;\n    font-size: 16px;\n    line-height: 1.6;\n    padding: 8px;\n  }\n  .rel_box01 pre {\n    background-color: #333333;\n    color: white;\n    font-size: 16px;\n    line-height: 1.6;\n    padding: 8px;\n  }\n  .rel_box01 .ttl {\n    background-color: #017a07;\n    box-shadow: 0px 2px 2px rgba(0,0,0,0.2);\n    -moz-box-shadow: 0px 2px 2px rgba(0,0,0,0.2);\n    -webkit-box-shadow: 0px 2px 2px rgba(0,0,0,0.2);\n    color: #FFFFFF;\n    font-size: 16px;\n    line-height: 1.0;\n    padding: 8px;\n    position: relative;\n  }\n\n  /* 三角形 */\n  .rel_box01 .ttl:before {\n    border: 7px solid transparent;\n    border-top: 7px solid #017a07;\n    box-sizing: border-box;\n    content: \"\";\n    height: 7px;\n    left: 50%;\n    margin:0 0 0 -7px;\n    position: absolute;\n    top: 100%;\n    width: 14px;\n  }\n</style>\n"],"sourceRoot":"src/views"}]}