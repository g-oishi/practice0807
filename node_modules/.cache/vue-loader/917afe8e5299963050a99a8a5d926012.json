{"remainingRequest":"/Users/abs/Documents/ohishi/Vuejs_practice/practice05/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/abs/Documents/ohishi/Vuejs_practice/practice05/src/views/Nginx.vue?vue&type=style&index=0&id=24a37612&scoped=true&lang=css&","dependencies":[{"path":"/Users/abs/Documents/ohishi/Vuejs_practice/practice05/src/views/Nginx.vue","mtime":1595988423774},{"path":"/Users/abs/Documents/ohishi/Vuejs_practice/practice05/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/abs/Documents/ohishi/Vuejs_practice/practice05/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/abs/Documents/ohishi/Vuejs_practice/practice05/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/abs/Documents/ohishi/Vuejs_practice/practice05/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/abs/Documents/ohishi/Vuejs_practice/practice05/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm5naW54IHsKICBmb250LXNpemU6IDE2cHg7CiAgcGFkZGluZzogMTVweCAxNXB4IDAgMTVweDsKfQoubmdpbnhfaDAxIHsKICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoI0YzRjVGNSwgI2ZmZik7CiAgYmFja2dyb3VuZDogLW8tbGluZWFyLWdyYWRpZW50KCNGM0Y1RjUsICNmZmYpOwogIGJhY2tncm91bmQ6IC1tcy1saW5lYXItZ3JhZGllbnQoI0YzRjVGNSwgI2ZmZik7CiAgYmFja2dyb3VuZDogLW1vei1saW5lYXItZ3JhZGllbnQoI0YzRjVGNSwgI2ZmZik7CiAgYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQoI0YzRjVGNSwgI2ZmZik7CiAgYmFja2dyb3VuZDogLXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIGxlZnQgdG9wLCBsZWZ0IGJvdHRvbSwgY29sb3Itc3RvcCgxLjAwLCAjZmZmKSwgY29sb3Itc3RvcCgwLjAwLCAjRjNGNUY1KSk7CiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICMxQjczQkE7CiAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICBmb250LXNpemU6IDIycHg7CiAgbWFyZ2luOiAwIDAgMTVweDsKICBwYWRkaW5nOiA3cHggMCA1cHggNXB4Owp9Ci5uZ2lueF9oMDIgewogIGJvcmRlci1ib3R0b206MXB4IHNvbGlkICM5OTk5OTk7CiAgY29sb3I6ICMzMzM7CiAgZm9udC1zaXplOiAyMHB4OwogIG1hcmdpbjogMCAwIDIwcHg7CiAgcGFkZGluZzogMCAwIDhweDsKfQoubmdpbnhfYm94MDEgewogIGJhY2tncm91bmQtY29sb3I6ICMxQjczQkE7CiAgd2lkdGg6IGF1dG87Cn0KLm5naW54X2JveDAxIHAgewogIGJhY2tncm91bmQtY29sb3I6ICMzMzMzMzM7CiAgY29sb3I6IHdoaXRlOwogIGZvbnQtc2l6ZTogMTZweDsKICBsaW5lLWhlaWdodDogMS42OwogIHBhZGRpbmc6IDhweDsKfQoubmdpbnhfYm94MDEgLnR0bCB7CiAgYmFja2dyb3VuZC1jb2xvcjogIzAxN2EwNzsKICBib3gtc2hhZG93OiAwcHggMnB4IDJweCByZ2JhKDAsMCwwLDAuMik7CiAgLW1vei1ib3gtc2hhZG93OiAwcHggMnB4IDJweCByZ2JhKDAsMCwwLDAuMik7CiAgLXdlYmtpdC1ib3gtc2hhZG93OiAwcHggMnB4IDJweCByZ2JhKDAsMCwwLDAuMik7CiAgY29sb3I6ICNGRkZGRkY7CiAgZm9udC1zaXplOiAxNnB4OwogIGxpbmUtaGVpZ2h0OiAxLjA7CiAgcGFkZGluZzogOHB4OwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQoKLyog5LiJ6KeS5b2iICovCi5uZ2lueF9ib3gwMSAudHRsOmJlZm9yZSB7CiAgYm9yZGVyOiA3cHggc29saWQgdHJhbnNwYXJlbnQ7CiAgYm9yZGVyLXRvcDogN3B4IHNvbGlkICMwMTdhMDc7CiAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICBjb250ZW50OiAiIjsKICBoZWlnaHQ6IDdweDsKICBsZWZ0OiA1MCU7CiAgbWFyZ2luOjAgMCAwIC03cHg7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogMTAwJTsKICB3aWR0aDogMTRweDsKfQo="},{"version":3,"sources":["Nginx.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Nginx.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"nginx\">\n    <h1 class=\"nginx_h01\">概要</h1>\n    <p>\n      Raspberry PiにNginx（Webサーバー）をインストールする手順を説明します。\n    </p>\n    <div style=\"height:40px\"></div>\n\n    <h2 class=\"nginx_h02\" id=\"content01\">{{ navListsNginx[0].name }}</h2>\n    <p>\n      ユーザーをrootに切り替えます。\n    </p>\n    <p>\n      Raspberry PiのターミナルあるいはRaspberry PiにSSH接続中のPCのターミナルにて以下のコマンドを入力し、rootのパスワードを設定してください。\n    </p>\n    <div class=\"nginx_box01\">\n      <h3 class=\"ttl\">ターミナル</h3>\n      <p>\n        $ sudo passwd root\n      </p>\n    </div>\n    <p>\n      <br>\n      rootパスワードを変更した後、以下のコマンドでrootユーザーに切り替えてください。\n    </p>\n    <div class=\"nginx_box01\">\n      <h3 class=\"ttl\">ターミナル</h3>\n      <p>\n        $ su\n      </p>\n    </div>\n    <p>\n      このときパスワードを要求されるので、先ほど設定したパスワードを入力します。\n    </p>\n    <div style=\"height:60px\"></div>\n\n    <h2 class=\"nginx_h02\" id=\"content02\">{{ navListsNginx[1].name }}</h2>\n    <p>\n      Nginxのソースパッケージをビルドするのに必要なツールをインストールします。\n    </p>\n    <p>\n      以下のコマンドでツールパッケージ\"build essential\"をインストールしてください。\n    </p>\n    <div class=\"nginx_box01\">\n      <h3 class=\"ttl\">ターミナル</h3>\n      <p>\n        $ apt install build-essential\n      </p>\n    </div>\n    <div style=\"height:60px\"></div>\n\n    <h2 class=\"nginx_h02\" id=\"content03\">{{ navListsNginx[2].name }}</h2>\n    <p>\n      Nginxの前提条件パッケージをインストールします。\n    </p>\n    <p>\n      以下のコマンドでパッケージ\"gnupg2\"をインストールしてください。\n    </p>\n    <div class=\"nginx_box01\">\n      <h3 class=\"ttl\">ターミナル</h3>\n      <p>\n        $ apt install curl gnupg2 ca-certificates lsb-release\n      </p>\n    </div>\n    <div style=\"height:60px\"></div>\n\n    <h2 class=\"nginx_h02\" id=\"content04\">{{ navListsNginx[3].name }}</h2>\n    <p>\n      Nginx公式サイトのリポジトリ情報を追加します。\n    </p>\n    <p>\n      初めに、以下のコマンドで公式サイトのPGP公開鍵を登録してください。\n    </p>\n    <div class=\"nginx_box01\">\n      <h3 class=\"ttl\">ターミナル</h3>\n      <p>\n        $ wget -O - http://nginx.org/keys/nginx_signing.key | apt-key add -\n      </p>\n    </div>\n    <p>\n      <br>\n      次に、Nginxソースパッケージのリポジトリ情報を追加してください。\n    </p>\n    <div class=\"nginx_box01\">\n      <h3 class=\"ttl\">ターミナル</h3>\n      <p>\n        $ echo \"deb-src http://nginx.org/packages/mainline/debian `lsb_release -cs` nginx\" >> /etc/apt/sources.list.d/nginx.list\n      </p>\n    </div>\n    <p>\n      <br>\n      最後に、パッケージリストの更新を行ってください。\n    </p>\n    <div class=\"nginx_box01\">\n      <h3 class=\"ttl\">ターミナル</h3>\n      <p>\n        $ apt update\n      </p>\n    </div>\n    <div style=\"height:60px\"></div>\n\n    <h2 class=\"nginx_h02\" id=\"content05\">{{ navListsNginx[4].name }}</h2>\n    <p>\n      Nginxのソースパッケージをビルドする際に必要な依存パッケージをインストールします。\n    </p>\n    <p>\n      以下のコマンドでインストールを実行してください。\n    </p>\n    <div class=\"nginx_box01\">\n      <h3 class=\"ttl\">ターミナル</h3>\n      <p>\n        $ apt build-dep nginx\n      </p>\n    </div>\n    <div style=\"height:60px\"></div>\n\n    <h2 class=\"nginx_h02\" id=\"content06\">{{ navListsNginx[5].name }}</h2>\n    <p>\n      Nginxのソースパッケージをダウンロード・インストールします。\n    </p>\n    <p>\n      ソースパッケージのダウンロード及びビルド作業を行うためのディレクトリを作成して、ここに移動します。<br>\n      初めに、以下のリンク先で最新（Mainline version）の版数を確認してください（2020/07/28時点では1.19.1）。\n    </p>\n    <a href=\"https://nginx.org/en/download.html\" target=\"_blank\">Nginx Version リスト</a>\n    <p>\n      <br>\n      以下のコマンドを順番に実行して、ディレクトリの作成及び移動を行ってください。<br>\n      下記の版数は2020/07/28時点の最新になっていますが、この値は上記で確認した最新の版数に変更して実行してください。\n    </p>\n    <div class=\"nginx_box01\">\n      <h3 class=\"ttl\">ターミナル</h3>\n      <p>\n        $ mkdir /usr/local/src/nginx<br>\n        $ mkdir /usr/local/src/nginx/1.19.1<br>\n        $ chmod 777 /usr/local/src/nginx/1.19.1<br>\n        $ cd /usr/local/src/nginx/1.19.1\n      </p>\n    </div>\n    <p>\n      <br>\n      次に、Nginxのソースパッケージをダウンロードしてください。\n    </p>\n    <div class=\"nginx_box01\">\n      <h3 class=\"ttl\">ターミナル</h3>\n      <p>\n        $ apt source nginx\n      </p>\n    </div>\n    <p>\n      <br>\n      ダウンロード後、ビルド作業を行うためにダウンロードしたソースパッケージのディレクトリに移動してください。\n    </p>\n    <div class=\"nginx_box01\">\n      <h3 class=\"ttl\">ターミナル</h3>\n      <p>\n        $ cd nginx-1.19.1\n      </p>\n    </div>\n    <p>\n      <br>\n      ビルドコマンドを実行してください。\n    </p>\n    <div class=\"nginx_box01\">\n      <h3 class=\"ttl\">ターミナル</h3>\n      <p>\n        $ dpkg-buildpackage -uc -b\n      </p>\n    </div>\n    <p>\n      <br>\n      ビルド実行後、親ディレクトリにDebパッケージファイルが作成されていることを確認してください。\n    </p>\n    <div class=\"nginx_box01\">\n      <h3 class=\"ttl\">ターミナル</h3>\n      <p>\n        $ cd..<br>\n        $ ls\n      </p>\n    </div>\n    <p>\n      <b><font color=\"red\">\"nginx_1.19.1-1~buster_armhf.deb\"</font></b>という名称のファイルが確認できればOKです（版数は作業時点の最新）。\n    </p>\n    <div style=\"height:60px\"></div>\n\n    <h2 class=\"nginx_h02\" id=\"content07\">{{ navListsNginx[6].name }}</h2>\n    <p>\n      前回の手順で作成されたDebパッケージファイルをインストールします。\n    </p>\n    <p>\n      以下のコマンドでインストールを実行してください。\n    </p>\n    <div class=\"nginx_box01\">\n      <h3 class=\"ttl\">ターミナル</h3>\n      <p>\n        $ apt install ./nginx_1.19.1-1~buster_armhf.deb\n      </p>\n    </div>\n    <div style=\"height:60px\"></div>\n\n    <h2 class=\"nginx_h02\" id=\"content08\">{{ navListsNginx[7].name }}</h2>\n    <p>\n      インストールされたNginxのバージョンと、その起動設定を確認します。\n    </p>\n    <p>\n      以下のコマンドでバージョン確認を行ってください。\n    </p>\n    <div class=\"nginx_box01\">\n      <h3 class=\"ttl\">ターミナル</h3>\n      <p>\n        $ nginx -V\n      </p>\n    </div>\n    <p>\n      <br>\n      次に、Nginxの起動状態を確認するために以下のコマンドを実行してください。\n    </p>\n    <div class=\"nginx_box01\">\n      <h3 class=\"ttl\">ターミナル</h3>\n      <p>\n        $ systemctl status nginx\n      </p>\n    </div>\n    <p>\n      <b><font color=\"red\">\"Active: active (running)\"</font></b>と表示されていれば起動状態です。\n    </p>\n    <p>\n      <br>\n      起動していない場合は、以下のコマンドで起動してください。\n    </p>\n    <div class=\"nginx_box01\">\n      <h3 class=\"ttl\">ターミナル</h3>\n      <p>\n        $ systemctl start nginx\n      </p>\n    </div>\n    <p>\n      <br>\n      続けて、Nginxの自動起動設定を確認するために以下のコマンドを実行してください。\n    </p>\n    <div class=\"nginx_box01\">\n      <h3 class=\"ttl\">ターミナル</h3>\n      <p>\n        $ systemctl is-enabled nginx\n      </p>\n    </div>\n    <p>\n      <b><font color=\"red\">\"enabled\"</font></b>と表示されていれば自動起動が設定されている状態です。\n    </p>\n    <p>\n      <br>\n      自動起動が設定されていない場合は、以下のコマンドで起動してください。\n    </p>\n    <div class=\"nginx_box01\">\n      <h3 class=\"ttl\">ターミナル</h3>\n      <p>\n        $ systemctl enable nginx\n      </p>\n    </div>\n    <div style=\"height:60px\"></div>\n\n    <h2 class=\"nginx_h02\" id=\"content09\">{{ navListsNginx[8].name }}</h2>\n    <p>\n      最後に動作確認を行います。\n    </p>\n    <p>\n      Raspberry Piと同じネットワーク上のPCにてブラウザを起動し、Raspberry PiのIPアドレスを指定してアクセスしてください。<br>\n      <b>\"Welcome to nginx!\"</b>と書いてあるページ（初期画面）が表示されたら確認完了です。\n    </p>\n    <div style=\"height:30px\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      navListsNginx: [\n        {\n          name: 'rootユーザーへの切り替え',\n          link: '/nginx',\n          hash: '#content01'\n        },\n        {\n          name: 'パッケージ構築の必須ツール',\n          link: '/nginx',\n          hash: '#content02'\n        },\n        {\n          name: '前提条件パッケージ',\n          link: '/nginx',\n          hash: '#content03'\n        },\n        {\n          name: 'リポジトリ情報追加',\n          link: '/nginx',\n          hash: '#content04'\n        },\n        {\n          name: '依存パッケージ',\n          link: '/nginx',\n          hash: '#content05'\n        },\n        {\n          name: 'ソースパッケージ',\n          link: '/nginx',\n          hash: '#content06'\n        },\n        {\n          name: 'Debパッケージ',\n          link: '/nginx',\n          hash: '#content07'\n        },\n        {\n          name: 'バージョン及び起動設定の確認',\n          link: '/nginx',\n          hash: '#content08'\n        },\n        {\n          name: '動作確認',\n          link: '/nginx',\n          hash: '#content09'\n        }\n      ]\n    }\n  },\n  methods: {\n    setNginxLists () {\n      this.$store.commit('setDrawer', true)\n      this.$store.commit('setNavLists', this.navListsNginx)\n    }\n  },\n  created: function () {\n    this.setNginxLists()\n  }\n}\n</script>\n\n<style scoped>\n  .nginx {\n    font-size: 16px;\n    padding: 15px 15px 0 15px;\n  }\n  .nginx_h01 {\n    background: linear-gradient(#F3F5F5, #fff);\n    background: -o-linear-gradient(#F3F5F5, #fff);\n    background: -ms-linear-gradient(#F3F5F5, #fff);\n    background: -moz-linear-gradient(#F3F5F5, #fff);\n    background: -webkit-linear-gradient(#F3F5F5, #fff);\n    background: -webkit-gradient(linear, left top, left bottom, color-stop(1.00, #fff), color-stop(0.00, #F3F5F5));\n    border-bottom: 2px solid #1B73BA;\n    box-sizing: border-box;\n    font-size: 22px;\n    margin: 0 0 15px;\n    padding: 7px 0 5px 5px;\n  }\n  .nginx_h02 {\n    border-bottom:1px solid #999999;\n    color: #333;\n    font-size: 20px;\n    margin: 0 0 20px;\n    padding: 0 0 8px;\n  }\n  .nginx_box01 {\n    background-color: #1B73BA;\n    width: auto;\n  }\n  .nginx_box01 p {\n    background-color: #333333;\n    color: white;\n    font-size: 16px;\n    line-height: 1.6;\n    padding: 8px;\n  }\n  .nginx_box01 .ttl {\n    background-color: #017a07;\n    box-shadow: 0px 2px 2px rgba(0,0,0,0.2);\n    -moz-box-shadow: 0px 2px 2px rgba(0,0,0,0.2);\n    -webkit-box-shadow: 0px 2px 2px rgba(0,0,0,0.2);\n    color: #FFFFFF;\n    font-size: 16px;\n    line-height: 1.0;\n    padding: 8px;\n    position: relative;\n  }\n\n  /* 三角形 */\n  .nginx_box01 .ttl:before {\n    border: 7px solid transparent;\n    border-top: 7px solid #017a07;\n    box-sizing: border-box;\n    content: \"\";\n    height: 7px;\n    left: 50%;\n    margin:0 0 0 -7px;\n    position: absolute;\n    top: 100%;\n    width: 14px;\n  }\n</style>\n"]}]}